{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","resetGoods","setState","addGoods","product","this","message","length","firstPartOfGoods","slice","join","lastGood","className","type","onClick","map","good","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsFaC,E,4MA9EbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,WACX,EAAKC,SAAS,CAAEF,cAAe,M,EAGjCG,SAAW,SAACC,GACV,EAAKF,UAAS,SAACH,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BI,S,4CAI5C,WAAU,IAAD,OACCJ,EAAkBK,KAAKN,MAAvBC,cAEJM,EAAU,GAUd,GAR6B,IAAzBN,EAAcO,SAChBD,EAAU,qBAGiB,IAAzBN,EAAcO,SAChBD,EAAO,UAAMN,EAAN,iBAGLA,EAAcO,OAAS,EAAG,CAC5B,IAAMC,EAAmBR,EAAcS,MAAM,GAAI,GAAGC,KAAK,MACnDC,EAAWX,EAAcA,EAAcO,OAAS,GAEtDD,EAAO,UAAME,EAAN,gBAA8BG,EAA9B,iBAGT,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,mBAAd,SACGN,MAECN,EAAcO,QAChB,wBACEM,KAAK,SACLD,UAAU,yBACVE,QAAST,KAAKJ,WAHhB,eAQF,oBAAIW,UAAU,kBAAd,SACGf,EAAgBkB,KAAI,SAAAC,GAAI,OACvB,qBACEJ,UAAWK,IACRjB,EAAckB,SAASF,GAEpB,YADA,mBAHR,UAQGA,GACEhB,EAAckB,SAASF,IACxB,wBACEH,KAAK,SACLD,UAAU,oBACVE,QAAS,WACP,EAAKX,SAASa,IAJlB,mBAJGA,e,GAzDDG,IAAMC,WClBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bb3c4bac.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  resetGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  addGoods = (product: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, product],\n    }));\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    let message = '';\n\n    if (selectedGoods.length === 0) {\n      message = 'No selected goods';\n    }\n\n    if (selectedGoods.length === 1) {\n      message = `${selectedGoods} is selected`;\n    }\n\n    if (selectedGoods.length > 1) {\n      const firstPartOfGoods = selectedGoods.slice(0, -1).join(', ');\n      const lastGood = selectedGoods[selectedGoods.length - 1];\n\n      message = `${firstPartOfGoods} and ${lastGood} are selected`;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-goods__title\">\n          {message}\n        </h1>\n        {!(!selectedGoods.length) && (\n          <button\n            type=\"button\"\n            className=\"App-goods__title-reset\"\n            onClick={this.resetGoods}\n          >\n            X\n          </button>\n        )}\n        <ul className=\"App-goods__list\">\n          {goodsFromServer.map(good => (\n            <li\n              className={classNames(\n                !selectedGoods.includes(good)\n                  ? 'App-goods__item'\n                  : 'App-added',\n              )}\n              key={good}\n            >\n              {good}\n              {(!selectedGoods.includes(good)) && (\n                <button\n                  type=\"button\"\n                  className=\"App-goods__button\"\n                  onClick={() => {\n                    this.addGoods(good);\n                  }}\n                >\n                  add\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}